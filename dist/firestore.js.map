{"version":3,"file":"firestore.js","sources":["webpack://orkan/webpack/universalModuleDefinition","webpack://orkan/webpack/bootstrap","webpack://orkan/external \"mobx\"","webpack://orkan/external \"invariant\"","webpack://orkan/external \"firebase/app\"","webpack://orkan/external \"lodash/forEach\"","webpack://orkan/external \"lodash/omitBy\"","webpack://orkan/./node_modules/path-browserify/index.js","webpack://orkan/./src/firestore.js","webpack://orkan/external \"observable-nested-map\"","webpack://orkan/./node_modules/process/browser.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"orkan\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"orkan\"] = factory();\n\telse\n\t\troot[\"orkan\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = require(\"mobx\");","module.exports = require(\"invariant\");","module.exports = require(\"firebase/app\");","module.exports = require(\"lodash/forEach\");","module.exports = require(\"lodash/omitBy\");","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","import firebase from 'firebase/app';\nimport invariant from 'invariant';\nimport omitBy from 'lodash/omitBy';\nimport forEach from 'lodash/forEach';\nimport {observable, isObservable, toJS, action} from 'mobx';\nimport ObservableNestedMap from 'observable-nested-map';\nimport nodePath from 'path';\n\nconst validPathInvariant = path => {\n\tinvariant(!!path.length, 'Invalid path, expected a non empty string');\n\tinvariant(typeof path === 'string', 'Invalid path expected a string, got ' + typeof path);\n\tinvariant(!path.startsWith('.') && !path.startsWith('/'), 'Invalid path structure. paths cannot start with `.` or `/`. got:' + path);\n};\n\nconst validQueryInvariant = (path, options) => {\n\tinvariant(!options || path.split('/').length === 1, `Invalid query arguments. cannot query non collections with options`);\n};\n\nconst settablePathInvariant = path => {\n\tinvariant(path.split('/').length <= 2, `Invalid query arguments. cannot use non collections paths with options`);\n};\n\nconst collectionPathInvariant = path => invariant(path.split('/').length === 1, 'Invalid collection path. expected a path with one segment');\n\n\n/*\n\t# how does it work?\n\n\t## listening to values\n\t- regardless the path requested, the most basic piece of data which will be loaded is a document\n\t- values returned will always be accurate to the path requested\n\n\tstore.listen('objects/home/hero/title') => listens to objects/home\n\tstore.load('objects/home/hero/title') => loads objects/home, returns objects/home/hero/title\n\tstore.getValue('objects/home/hero/title') => returns objects/home/hero/title\n\tstore.listen('posts/12345/title') => listens to posts/12345\n\tstore.load('posts/12345/title') => loads posts/12345, returns posts/12345/title\n\tstore.getValue('posts/12345/title') => returns posts/12345/title\n\n\t## listening to collections\n\t- don't use options on non collection paths\n\n\tstore.listen('posts', {where.. orderBy..}) => listens to posts with options. on collections only\n\tstore.load('posts', {where.. orderBy..}) => loads posts with options. on collections only\n\tstore.getValue('posts', {where.. orderBy..}) => returns posts with options. on collections only\n\n\t## check initial loading status\n\tstore.isLoading('posts') => return if posts is loading\n\tstore.isLoading('posts', {where.. orderBy..}) => return if posts is running with options. on collections only\n\tstore.isLoading('posts/12345/title') => return if posts/12345 is loading\n\tstore.isLoading('objects/home/hero/title') -> return if objects/home is loading\n\n\t## setting values\n\t- setting values is available only on a collection or document level\n\n\tstore.setValue('posts/1234', {...}) => will add/override posts/1234\n\tstore.setValue('objects/home', {...}) => will add/override object/homes\n\tstore.setValue('posts', {...}) => will push a new document to posts with auto key\n\n\t## removing values\n\t- removing values is available only on a document level\n\n\tstore.remove('posts/1234') => will remove posts/1234\n\tstore.remove('objects/home') => will remove objects/home\n*/\nexport default class Firestore{\n\tapi;\n\n\tmap = new ObservableNestedMap({});\n\n\tpathsStatus = observable.map({});\n\tlisteners = observable.map({});\n\tcollections = observable.map({});\n\n\tconfig = {\n\t\tDocumentSnapshot: firebase.firestore.DocumentSnapshot,\n\t\tQuerySnapshot: firebase.firestore.QuerySnapshot,\n\t\tQueryDocumentSnapshot: firebase.firestore.QueryDocumentSnapshot,\n\t};\n\n\tconstructor(api, options = {}){\n\t\tthis.api = api;\n\t\tthis.config = {\n\t\t\t...this.config,\n\t\t\t...options\n\t\t};\n\n\t\twindow.a = () => console.log(this.map.toJS(), toJS(this.collections), toJS(this.listeners), toJS(this.pathsStatus))\n\t}\n\n\tgetValue(path, options){\n\t\tvalidPathInvariant(path);\n\t\tvalidQueryInvariant(path, options);\n\n\t\tif(isCollectionPath(path)){\n\t\t\tconst serializedPath = serializeQuery(path, options);\n\t\t\tconst collection = this.collections.get(serializedPath) || [];\n\n\t\t\treturn collection.map(collectionKey => {\n\t\t\t\tconst value = this.map.get(toDotPath(nodePath.join(path, collectionKey)));\n\n\t\t\t\tconst raw = isObservable(value)?toJS(value):value;\n\t\t\t\tif(typeof raw === 'object'){\n\t\t\t\t\treturn {...raw, $key: collectionKey};\n\t\t\t\t}else{\n\t\t\t\t\treturn {$value: raw, $key: collectionKey};\n\t\t\t\t}\n\t\t\t});\n\t\t}else{\n\t\t\tconst value = this.map.get(toDotPath(path));\n\t\t\treturn isObservable(value)?toJS(value):value;\n\t\t}\n\t}\n\n\tasync setValue(path, value){\n\t\tvalidPathInvariant(path);\n\t\tsettablePathInvariant(path);\n\n\t\tlet sanitizedValue = value;\n\t\tif(typeof value === 'object'){\n\t\t\tsanitizedValue = omitBy(value, value => value === undefined);\n\t\t}\n\n\t\tconst query = this.createQuery(path);\n\t\tconst action = (query.add || query.set).bind(query);\n\t\treturn await action(sanitizedValue);\n\t}\n\n\taddToCollection(serializedQuery, index, key){\n\t\tvalidPathInvariant(serializedQuery);\n\n\t\tlet collection = this.collections.get(serializedQuery);\n\t\tif(!collection){\n\t\t\tcollection = observable([]);\n\t\t\tthis.collections.set(serializedQuery, collection);\n\t\t}\n\n\t\tcollection.remove(key);\n\t\tcollection.splice(index, 0, key);\n\t}\n\n\tremoveFromCollection(serializedQuery, key){\n\t\tlet collection = this.collections.get(serializedQuery);\n\t\tcollection.remove(key);\n\t}\n\n\n\n\tlisten(path, options){\n\t\tvalidPathInvariant(path);\n\t\tconst serializedQuery = serializeQuery(path, options);\n\n\t\tlet listener = this.listeners.get(serializedQuery);\n\n\t\tif(listener){\n\t\t\tlistener.listeners++;\n\t\t}else{\n\t\t\tthis.setPathIsLoading(serializedQuery, true);\n\t\t\tconst query = this.createQuery(path, options);\n\t\t\tconst destroy = query.onSnapshot(action(snapshot => {\n\t\t\t\tthis.handleNewSnapShot(path, options, snapshot);\n\t\t\t\tthis.setPathIsLoading(serializedQuery, false);\n\t\t\t}), err => {\n\t\t\t\tconsole.error(err)\n\t\t\t});\n\n\t\t\tlistener = observable({\n\t\t\t\tlisteners: 1,\n\t\t\t\tdestroy\n\t\t\t});\n\n\t\t\tthis.listeners.set(serializedQuery, listener);\n\t\t}\n\n\t\treturn () => {\n\t\t\tlistener.listeners--;\n\t\t\tif(!listener.listeners){\n\t\t\t\tlistener.destroy();\n\t\t\t\tthis.listeners.delete(serializedQuery);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t@action async load(path, options){\n\t\tvalidPathInvariant(path);\n\t\tconst serializedQuery = serializeQuery(path, options);\n\t\tthis.setPathIsLoading(serializedQuery, true);\n\t\tconst query = this.createQuery(path, options);\n\n\t\tconst snapshot = await query.get();\n\t\tthis.handleNewSnapShot(path, options, snapshot);\n\t\tthis.setPathIsLoading(serializedQuery, false);\n\t\treturn this.getValue(path, options);\n\t}\n\n\t@action handleNewSnapShot(path, options, snapshot){\n\t\tconst sanitizedPath = toQueryablePath(path);\n\t\tif(this.isDocumentSnapshot(snapshot)){\n\t\t\tif(snapshot.exists){\n\t\t\t\tthis.map.set(toDotPath(sanitizedPath), snapshot.data());\n\t\t\t}else{\n\t\t\t\tthis.map.remove(toDotPath(sanitizedPath));\n\t\t\t}\n\n\t\t}else if(this.isCollectionSnapshot(snapshot)){\n\t\t\t// no need to sanitize path because only collection paths end up here\n\t\t\tconst serializedQuery = serializeQuery(path, options);\n\n\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\tconst docPath = nodePath.join(path, change.doc.id);\n\t\t\t\tswitch(change.type){\n\t\t\t\t\tcase 'modified':\n\t\t\t\t\t\tthis.map.set(toDotPath(docPath), change.doc.data());\n\t\t\t\t\t\tif(change.oldIndex > -1 && change.newIndex !== change.oldIndex){\n\t\t\t\t\t\t\tthis.addToCollection(serializedQuery, change.newIndex, change.doc.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'added':\n\t\t\t\t\t\tthis.map.set(toDotPath(docPath), change.doc.data());\n\t\t\t\t\t\tthis.addToCollection(serializedQuery, change.newIndex, change.doc.id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'removed':\n\t\t\t\t\t\tthis.map.remove(toDotPath(docPath));\n\t\t\t\t\t\tthis.removeFromCollection(serializedQuery, change.doc.id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\tremove(path){\n\t\tvalidPathInvariant(path);\n\t\tsettablePathInvariant(path);\n\t\tthis.map.remove(toDotPath(path));\n\t\treturn this.createQuery(path).delete();\n\t}\n\n\n\tclearCache(path){\n\t\tvalidPathInvariant(path);\n\t\tthis.map.remove(toDotPath(path));\n\t}\n\n\tsetPathStatus(serializedQuery, status){\n\t\tvalidPathInvariant(serializedQuery);\n\n\t\tconst currentStatus = this.pathsStatus.get(serializedQuery) || {};\n\t\tthis.pathsStatus.set(serializedQuery, {...currentStatus, ...status});\n\t}\n\n\tsetPathIsLoading(serializedQuery, state){\n\t\tvalidPathInvariant(serializedQuery);\n\n\t\tconst currentStatus = this.pathsStatus.get(serializedQuery);\n\t\tif(!currentStatus || !state){\n\t\t\tthis.setPathStatus(serializedQuery, {isLoading: state});\n\t\t}\n\t}\n\n\tisLoading(serializedQuery){\n\t\tvalidPathInvariant(serializedQuery);\n\t\tconst currentStatus = this.pathsStatus.get(serializedQuery);\n\t\treturn currentStatus && currentStatus.isLoading;\n\t}\n\n\tcreateQuery(path, options = {}){\n\t\tconst {collection, docPath} = breakPath(path);\n\t\tlet query = this.api.collection(collection);\n\n\t\tif(docPath){\n\t\t\tquery = query.doc(docPath);\n\t\t}\n\n\t\tquery = applyWhereOptionsToQuery(query, options.where);\n\t\tquery = applyOrderByOptionsToQuery(query, options.orderBy);\n\n\t\treturn query;\n\t}\n\n\tgenerateKey(path){\n\t\tcollectionPathInvariant(path);\n\t\treturn this.api.collection(path).doc().id;\n\t}\n\n\tisDocumentSnapshot(snapshot){\n\t\treturn typeof snapshot.data == 'function';\n\t\treturn snapshot instanceof this.config.DocumentSnapshot || snapshot instanceof this.config.QueryDocumentSnapshot;\n\t}\n\n\tisCollectionSnapshot(snapshot){\n\t\treturn typeof snapshot.forEach == 'function';\n\t\treturn snapshot instanceof this.config.QuerySnapshot;\n\t}\n}\n\n\n\n/*\n\twhere: {\n\t\tpath: {operator: value},\n\t\t...\n\t}\n*/\nconst applyWhereOptionsToQuery = (query, whereOptions = {}) => {\n\t\tlet finalQuery = query;\n\t\titerateWhereOptions(whereOptions, (path, optionOperator, optionValue) => finalQuery = finalQuery.where(path, optionOperator, optionValue))\n\t\treturn finalQuery;\n};\n\nconst iterateWhereOptions = (whereOptions, cb) => {\n\tforEach(whereOptions, (option, path) => {\n\t\tforEach(option, (optionValue, optionOperator) => cb(path, optionOperator, optionValue))\n\t});\n};\n\nconst serializeQueryOptions = (options = {}) => {\n\tconst queryString = [];\n\titerateWhereOptions(options.where, (path, optionOperator, optionValue) => queryString.push(`where=${path}${optionOperator}${optionValue}`));\n\n\tforEach(options.orderBy, (direction, path) => {\n\t\tqueryString.push(`orderBy:${path}|${direction}`);\n\t});\n\n\treturn queryString.join('&');\n};\n\n\nexport const serializeQuery = (path, options) => toQueryablePath(path) + '?' + serializeQueryOptions(options);\n\n\n/*\n\torderBy: {\n\t\tpath: 'asc'|'desc',\n\t\t...\n\t}\n*/\nconst applyOrderByOptionsToQuery = (query, orderByOptions = {}) => {\n\tlet finalQuery = query;\n\tforEach(orderByOptions, (direction, path) => {\n\t\tfinalQuery = finalQuery.orderBy(path, direction)\n\t});\n\treturn finalQuery;\n};\n\nexport const toDotPath = slashPath => slashPath.split('/').join('.');\n\nexport const breakPath = path => {\n\tconst [collection, docPath, ...innerParts] = path.split('/');\n\treturn {collection, docPath, innerPath: innerParts.join('/')};\n};\n\nexport const toQueryablePath = path => path.split('/').slice(0,2).join('/');\n\n\nconst isCollectionPath = path => path.split('/').length === 1;\n\n\n\n/*\n\n\tschema editor\n\t- on root you can create collections and documents inside an object like collection named\n\n\n\tSchema Editor        +  <-- adds a collection\n\t- objects       ///  +  <-- adds a document inside the objects object like collection\n\n\t- posts        [///] +  <-- adds a field to document\n\t\t- title          +  <-- adds a field under title, set title as object\n\t\t- tags     [///] +  <-- adds a field under tags, set tags as array\n\n\n{\n\tobjects: {\n\t\thome:{\n\t\t\ttitle: string\n\t\t}\n\t}\n\tposts: [{\n\t\ttitle: string,\n\t\ttags: []\n\t}]\n\torkanUsers: [{\n\t\tavatar,\n\t\temail,\n\t\teditData,\n\t\teditSchema,\n\t\teditUsers\n\t}],\n\torkanUsersRequests: [{\n\t\tuid,\n\t\tavatar,\n\t\temail\n\t}]\n\torkanObjects: {\n\t\tschema: {}\n\t\tschemaSettings: {}\n\t}\n}\n\n\n\nstore.listen('orkanUsers').value\nstore.listen('orkanUsers').isLoading\n\n\nstore.listen('orkanUsers')\nstore.getValue('orkanUsers')\nstore.getStatus('orkanUsers')\n\n\n\n\n\n\n\nstore.listen('objects/home/hero/title') => listens to objects/home\nstore.load('objects/home/hero/title') => loads objects/home, returns objects/home/hero/title\nstore.getValue('objects/home/hero/title') => returns objects/home/hero/title\n\nstore.listen('posts/12345/title') => listens to posts/12345\nstore.load('posts/12345/title') => loads posts/12345, returns posts/12345/title\nstore.getValue('posts/12345/title') => returns posts/12345/title\n\nstore.listen('posts', {where.. orderBy..}) => listens to posts with options. on collections only\nstore.load('posts', {where.. orderBy..}) => loads posts with options. on collections only\nstore.get('posts', {where.. orderBy..}) => returns posts with options. on collections only\n\n\n\n\n\n*/\n// class Test{\n// \tv;\n// \tconstructor(){\n// \t\tthis.atom = createAtom('test', () => {\n// \t\t\tconsole.log('observed');\n// \t\t\tsetInterval(() => {\n// \t\t\t\tthis.v = Math.random();\n// \t\t\t\tthis.atom.reportChanged();\n// \t\t\t}, 1000);\n// \t\t}, () => {\n// \t\t\tconsole.log('unobserved');\n// \t\t});\n//\n//\n// \t}\n//\n// \tget value(){\n// \t\tif(this.atom.reportObserved()){\n// \t\t\treturn this.v;\n// \t\t}\n//\n// \t\treturn 0;\n//\n// \t}\n// }\n//\n// window.t = new Test();\n//\n//\n// window.ob = () => autorun(() => {\n// \t\tconsole.log(t && t.value);\n// \t});\n","module.exports = require(\"observable-nested-map\");","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnuCA;AACA;AAeA;AAAA;AAAA;AAZA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;AACA;AACA;AACA;AACA;AAEA;;AAAA;AACA;AACA;AACA;;;;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA/GA;AAAA;AAUA;AAEA;AAAA;AAiCA;AAmEA;AAAA;AAvOA;AA2OA;;;;;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAGA;;;;;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACndsourceRoot":""}